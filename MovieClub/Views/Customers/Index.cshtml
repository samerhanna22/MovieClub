@model IEnumerable<MovieClub.Models.Customer>
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

<p>
@Html.ActionLink("New Customer", "New", "Customers", new { @class = "btn btn-primary" })

</p>

<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Discount Rate</th>
            <th>Edit</th>
            <th>Delete</th>
           
        </tr>
    </thead>
    <tbody></tbody>
</table>

<button id="clickme">click me please</button> <br/>





@section scripts
{
    <script>
        $(document).ready(function () {

            var table = $("#customers").DataTable({

                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [

                    {
                        data: "name",
                        render: function (data, type, customer) { return "<a href='/customers/details/" + customer.id + "'>" + customer.name + "</a>"; }
                    },

                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "id",
                        render: function (data) { return "<a href='/customers/edit/" + data + "'>Edit</a>";  }
                    },
                    {
                        data: "id",
                        render: function (data) { return "<button customer-data-id=" + data + " class='btn-link js-delete'>Delete</button>"; }
                    },

                   


                ]
            });

            $("#clickme").on("click",function(){alert("Hiiiii");});



            $("#customers").on("click",".js-delete", function () {

                    
                    var button = $(this);

                    bootbox.confirm("Are you sure you want to delete this cusomter?", function (result) {

                        if (result) {
                            $.ajax({
                                url: "/api/customers/" + button.attr("customer-data-id"),
                                method: "DELETE",
                                success: function () {
                                    console.log("success!");



                                    //button.parents("tr").remove(); <-- this remove the element but does not delete the record from the data table
                                    // that is why we need to delete the data row itself and foce the datatable to re-render

                                   // button.parents("tr").remove();
                                    table.row(button.parents("tr")).remove().draw();
                                }
                            });
                        }
                    });

                    
                }
                );
        });
    </script>

}